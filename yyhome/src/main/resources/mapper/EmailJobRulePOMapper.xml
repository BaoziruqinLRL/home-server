<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yyhome.dao.mapper.EmailJobRulePOMapper" >
  <resultMap id="BaseResultMap" type="com.yyhome.data.po.EmailJobRulePO" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="email_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="start_time" jdbcType="TIME" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIME" javaType="java.util.Date" />
      <arg column="start_date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="end_date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="interval" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="rule_sort" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_user" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="update_user" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, email_id, start_time, end_time, start_date, end_date, `interval`, rule_sort, create_user,
    update_user, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yyhome.data.example.EmailJobRulePOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from email_job_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from email_job_rule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from email_job_rule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yyhome.data.po.EmailJobRulePO" useGeneratedKeys="true" keyProperty="id">
    insert into email_job_rule (id, email_id, start_time, 
      end_time, start_date, end_date,
      `interval`, rule_sort, create_user,
      update_user, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{emailId,jdbcType=BIGINT}, #{startTime,jdbcType=TIME}, 
      #{endTime,jdbcType=TIME}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE},
      #{interval,jdbcType=INTEGER}, #{ruleSort,jdbcType=INTEGER}, #{createUser,jdbcType=BIGINT}, 
      #{updateUser,jdbcType=BIGINT}, now(), now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yyhome.data.po.EmailJobRulePO" >
    insert into email_job_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="emailId != null" >
        email_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="interval != null" >
        `interval`,
      </if>
      <if test="ruleSort != null" >
        rule_sort,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="emailId != null" >
        #{emailId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIME},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIME},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=DATE},
      </if>
      <if test="interval != null" >
        #{interval,jdbcType=INTEGER},
      </if>
      <if test="ruleSort != null" >
        #{ruleSort,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yyhome.data.po.EmailJobRulePO" >
    update email_job_rule
    <set >
      <if test="emailId != null" >
        email_id = #{emailId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIME},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIME},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="interval != null" >
        `interval` = #{interval,jdbcType=INTEGER},
      </if>
      <if test="ruleSort != null" >
        rule_sort = #{ruleSort,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yyhome.data.po.EmailJobRulePO" >
    update email_job_rule
    set email_id = #{emailId,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIME},
      end_time = #{endTime,jdbcType=TIME},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      `interval` = #{interval,jdbcType=INTEGER},
      rule_sort = #{ruleSort,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>