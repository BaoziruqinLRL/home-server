<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yyhome.dao.mapper.EmailJobPOMapper" >
  <resultMap id="BaseResultMap" type="com.yyhome.data.po.EmailJobPO" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sender" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="auth_code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="template_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="last_run_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="create_user" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="update_user" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="subject" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
      <arg column="context" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
      <arg column="type" jdbcType="TINYINT" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, sender, auth_code, template_id, last_run_time, create_user, update_user, 
    create_time, update_time, subject, context, type
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="BaseResultMap" parameterType="com.yyhome.data.example.EmailJobPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from email_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yyhome.data.example.EmailJobPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from email_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from email_job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from email_job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yyhome.data.po.EmailJobPO" useGeneratedKeys="true" keyProperty="id">
    insert into email_job (id, name, sender, 
      auth_code, template_id, last_run_time, 
      create_user, update_user, create_time, 
      update_time, subject, context, type
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{sender,jdbcType=VARCHAR}, 
      #{authCode,jdbcType=VARCHAR}, #{templateId,jdbcType=BIGINT}, #{lastRunTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT}, now(),
      now(), #{subject,jdbcType=LONGVARCHAR}, #{context,jdbcType=LONGVARCHAR},
      #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yyhome.data.po.EmailJobPO" >
    insert into email_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sender != null" >
        sender,
      </if>
      <if test="authCode != null" >
        auth_code,
      </if>
      <if test="templateId != null" >
        template_id,
      </if>
      <if test="lastRunTime != null" >
        last_run_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="context != null" >
        context,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="authCode != null" >
        #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null" >
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="lastRunTime != null" >
        #{lastRunTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=LONGVARCHAR},
      </if>
      <if test="context != null" >
        #{context,jdbcType=LONGVARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yyhome.data.po.EmailJobPO" >
    update email_job
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="authCode != null" >
        auth_code = #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="templateId != null" >
        template_id = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="lastRunTime != null" >
        last_run_time = #{lastRunTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=LONGVARCHAR},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yyhome.data.po.EmailJobPO" >
    update email_job
    set name = #{name,jdbcType=VARCHAR},
      sender = #{sender,jdbcType=VARCHAR},
      auth_code = #{authCode,jdbcType=VARCHAR},
      template_id = #{templateId,jdbcType=BIGINT},
      last_run_time = #{lastRunTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      subject = #{subject,jdbcType=LONGVARCHAR},
      context = #{context,jdbcType=LONGVARCHAR},
      type = #{type,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yyhome.data.po.EmailJobPO" >
    update email_job
    set name = #{name,jdbcType=VARCHAR},
      sender = #{sender,jdbcType=VARCHAR},
      auth_code = #{authCode,jdbcType=VARCHAR},
      template_id = #{templateId,jdbcType=BIGINT},
      last_run_time = #{lastRunTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      subject = #{subject,jdbcType=LONGVARCHAR},
      context = #{context,jdbcType=LONGVARCHAR},
      type = #{type,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>